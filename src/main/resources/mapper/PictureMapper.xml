<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiuli.liping.dao.PictureDao">

    <resultMap id="pictureResultMap" type="com.jiuli.liping.vo.Picture">
        <id column="pictureId" property="pictureId"/> 
        <result column="productId" property="productId"/> 
        <result column="pictureUrl" property="pictureUrl"/> 

        
        
    </resultMap>

    <sql id="pictureColumns">
        picture.pictureId AS "pictureId",
        picture.productId AS "productId",
        picture.pictureUrl AS "pictureUrl"
    </sql>

    <sql id="pictureJoins">
        
    </sql>

    <select id="get" resultMap="pictureResultMap">
        SELECT
        <include refid="pictureColumns" />
        FROM picture <include refid="pictureJoins" />
        <where>
        picture.pictureId = #{id}
        </where>
    </select>

    <select id="findList" resultMap="pictureResultMap">
        SELECT
        <include refid="pictureColumns" />
        FROM picture <include refid="pictureJoins" />
        <where>
        </where>
    </select>

    <select id="findAllList" resultMap="pictureResultMap">
        SELECT
        <include refid="pictureColumns" />
        FROM picture <include refid="pictureJoins" />
        <where>
        </where>
    </select>

    <insert id="insert">
        INSERT INTO picture(
            productId,
            pictureUrl
        )
        VALUES (
            #{productId},
            #{pictureUrl}
        )
    </insert>

    <insert id="insertBatch">
        INSERT INTO picture(
            pictureId,
            productId,
            pictureUrl
        )
        VALUES
        <foreach collection ="list" item="picture" separator =",">
        (
            #{picture.pictureId},
            #{picture.productId},
            #{picture.pictureUrl}
        )
        </foreach>
    </insert>

    <update id="update">
        UPDATE picture SET
        pictureId = #{pictureId},
        productId = #{productId},
        pictureUrl = #{pictureUrl}
        WHERE pictureId = #{pictureId}
    </update>

    <update id="delete">
        DELETE FROM picture
        WHERE pictureId = #{pictureId}
    </update>

</mapper>